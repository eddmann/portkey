name: Build Server

on:
  workflow_call:
    inputs:
      release-tag:
        required: true
        type: string

jobs:
  docker:
    name: Docker image
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        run: |
          docker build \
            -f Dockerfile.server \
            --label "org.opencontainers.image.source=https://github.com/eddmann/portkey" \
            -t ghcr.io/eddmann/portkey-server:latest .

      - name: Pack image
        run: docker save -o portkey-server-${{ inputs.release-tag }}-docker.tar ghcr.io/eddmann/portkey-server:latest

      - name: Upload image to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ inputs.release-tag }} portkey-server-${{ inputs.release-tag }}-docker.tar --clobber

  binary:
    name: Cross-compiled binaries
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        build:
          - linux-amd64
          - darwin-amd64
          - darwin-arm64
        include:
          - build: linux-amd64
            os: ubuntu-24.04
            goos: linux
            goarch: amd64
          - build: darwin-amd64
            os: macos-15
            goos: darwin
            goarch: amd64
          - build: darwin-arm64
            os: macos-15
            goos: darwin
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          CGO_ENABLED=0 go build -trimpath -buildvcs=false -ldflags="-s -w" -tags "netgo osusergo" -o dist/portkey-server-${{ inputs.release-tag }}-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/server

      - name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ inputs.release-tag }} dist/portkey-server-${{ inputs.release-tag }}-${{ matrix.goos }}-${{ matrix.goarch }} --clobber
